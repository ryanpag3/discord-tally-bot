name: CICD

on: [push]
 
jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5
        env:
          MYSQL_ROOT_PASSWORD: adminadmin
        ports:
          - 3307:3306
      redis:
        image: redis:latest
        ports:
          - 6379:6379
          
    steps:
    - uses: actions/checkout@v1
    - name: Setup environment
      run: |
        for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
        curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
        sudo apt-get install -y nodejs make build-essential libkrb5-dev gcc
        mkdir ~/.npm-global
        npm config set prefix '~/.npm-global'
        export PATH=~/.npm-global/bin:$PATH
        npm i -g n
        sudo n 10
        npm i -g node-gyp
        npm i -g yarn
        npm i -g ts-mocha
        npm i -g mocha
        npm i -g typescript
        npm i -g dotenv
    - name: Run Tally Bot Tests
      run: |
        cd bot/
        yarn install
        yarn coverage
      env:
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DATABASE_USER: ${{ secrets.DATABASE_USER }}
        DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
        SUGGEST_CHANNEL: ${{ secrets.SUGGEST_CHANNEL }}
        TEST_SUGGEST_CHANNEL: ${{ secrets.TEST_SUGGEST_CHANNEL }}
        BUGS_CHANNEL: ${{ secrets.BUGS_CHANNEL }}
        TEST_BUGS_CHANNEL: ${{ secrets.TEST_BUGS_CHANNEL }}
    - name: Tally Bot - Docker Build
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        cd bot/
        docker build . -t ryanpage/internal:tally-bot-${GITHUB_SHA::7}
        docker push ryanpage/internal:tally-bot-${GITHUB_SHA::7}
    - name: Announcer - Docker Build
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        cd announcer/
        docker build . -t ryanpage/internal:tally-bot-announcer-${GITHUB_SHA::7}
        docker push ryanpage/internal:tally-bot-announcer-${GITHUB_SHA::7}
    - name: Health Check - Docker Build
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        cd health-alert/
        docker build . -t ryanpage/internal:tally-bot-health-alert-${GITHUB_SHA::7}
        docker push ryanpage/internal:tally-bot-health-alert-${GITHUB_SHA::7}

